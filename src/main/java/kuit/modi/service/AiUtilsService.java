package kuit.modi.service;

import kuit.modi.dto.ai.AutoGenerateRequest;
import kuit.modi.dto.ai.LanguageStyleRequest;
import kuit.modi.dto.ai.StyledSummaryRequest;
import kuit.modi.dto.ai.SummaryRequest;
import kuit.modi.openai.OpenAiClient;
import lombok.RequiredArgsConstructor;
import org.springframework.stereotype.Service;

import java.util.Arrays;
import java.util.List;
import java.util.stream.Collectors;

@Service
@RequiredArgsConstructor
public class AiUtilsService {
    private final OpenAiClient openAiClient;

    public String autoGenerateDiary(AutoGenerateRequest request) {
        String prompt = "제시된 태그들을 바탕으로 한 문단으로 구성된 일기를 생성해줘. 태그들은 다음과 같아: " + String.join(", ", request.getTags());
        return openAiClient.ask(prompt);
    }

    public String summarizeDiary(SummaryRequest request) {
        String prompt = "다음 일기를 '~다.'와 같은 말투로 40자 이내로 요약해줘:\n" + request.getContent();
        return openAiClient.ask(prompt);
    }

    public List<String> extractLanguageStyle(LanguageStyleRequest request) {
        String prompt = "다음 일기 요약에 적절한 언어 스타일(예: 기쁨, 즐거움, 슬픔 등)을 적용하여 다시 쓰려고 해. 어울리는 언어 스타일을 3~4개 뽑아줘:\n" + request.getSummary();
        String response = openAiClient.ask(prompt);

        return Arrays.stream(response.split("\\r?\\n"))
                .map(String::trim)
                .filter(s -> !s.isEmpty())
                .map(s -> s.replaceFirst("^(\\d+\\.|-)+\\s*", ""))
                .collect(Collectors.toList());
    }

    public String getStyledSummary(StyledSummaryRequest request) {
        String prompt = "\"" + request.getStyle() + "\"이라는 언어 스타일을 적용해서 다음의 일기 요약을 다시 써줘: " + request.getSummary();
        return openAiClient.ask(prompt);
    }
}
