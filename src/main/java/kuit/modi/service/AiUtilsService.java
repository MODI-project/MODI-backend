package kuit.modi.service;

import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import kuit.modi.dto.ai.request.AutoGenerateRequest;
import kuit.modi.dto.ai.request.LanguageStyleRequest;
import kuit.modi.dto.ai.request.StyledSummaryRequest;
import kuit.modi.dto.ai.request.SummaryRequest;
import kuit.modi.dto.ai.response.LanguageStyleResponse;
import kuit.modi.openai.OpenAiClient;
import lombok.RequiredArgsConstructor;
import org.springframework.stereotype.Service;

@Service
@RequiredArgsConstructor
public class AiUtilsService {
    private final OpenAiClient openAiClient;

    private static final String SYSTEM_ROLE_AUTO_GENERATE =
            "당신은 사용자의 태그를 기반으로 감성적인 일기를 작성하는 전문가입니다. 제시된 태그들을 바탕으로 띄어쓰기 포함 200자 이내의 일기를 생성해 주세요.";
    private static final String SYSTEM_ROLE_SUMMARY =
            "당신은 사용자의 일기를 간결하고 핵심적으로 요약하는 전문가입니다. 제시된 일기를 띄어쓰기 포함 40자 이내로 요약해 주세요.";
    private static final String SYSTEM_ROLE_LANGUAGE_STYLE =
            "당신은 AI 일기 생성 및 요약 서비스의 도우미입니다.\n주어진 일기와 사용자가 선택한 감정을 기반으로 해당 감정과 연관된 언어 스타일을 3가지 제시합니다.\n언어 스타일은 반드시 '기쁨', '슬픔', '화남'과 같이 명사형(단어)으로만 제공합니다.\n출력은 아래 JSON 형식을 정확히 따릅니다. 다른 설명이나 불필요한 텍스트는 절대 포함하지 않습니다." +
            "{\n" +
                    "    \"styles\": [\n" +
                    "        \"명사형 스타일 1\",\n" +
                    "        \"명사형 스타일 2\",\n" +
                    "        \"명사형 스타일 3\"\n" +
                    "    ]\n" +
                    "}";
    private static final String SYSTEM_ROLE_STYLED_SUMMARY =
            "당신은 주어진 일기 요약에 특정 언어 스타일을 적용해 재작성하는 전문가입니다. 분량은 띄어쓰기 포함 40자 이내입니다.";

    private static final String SYSTEM_ROLE_DIARY = """
            당신은 감성적인 다이어리/문학 소녀 스타일의 작가입니다.
            사용자가 준 문장을 서정적이고 부드러운 어투로 재작성합니다.
            규칙:
            - 일상 속 작은 감정과 풍경을 섬세하게 묘사
            - 감탄사와 은유, 비유를 적절히 사용
            - 따뜻하고 감성적인 분위기 유지
            - 띄어쓰기 포함 40자 이내로 작성
            - 추가 설명, 해설, 서론 없이 변환된 문장만 출력
        """;

    private static final String SYSTEM_ROLE_INTERNET_MEME = """
            당신은 주어진 일기 요약을 2025년 한국에서 유행하는 SNS, 인터넷 밈 말투로 다시 써야 합니다.
            규칙:
            - 최근 인터넷 커뮤니티 말투로 짧고 직관적인 문장, 건조하고 압축적인 말투로 표현할 것
            - 줄임말·인터넷 은어 적극 사용 (ㅇㅈ, ㄹㅇ, ㅋㅋ, ;;, ~임, 미쳤다, 이거지 등)
            - 억지로 유행어, 밈 표현을 과도하게 넣지 않고 자연스러운 문장으로 표현
            - 문장 전체의 맥락과 표현이 어색하지 않아야 함
            - 띄어쓰기 포함 40자 이내로 작성
            - 추가 설명, 해설, 서론 없이 변환된 문장만 출력
            - 아래는 참고 예시:
              "카페에서 5시간 순삭"
              "한강에서 야경+치킨=낭만 ㅇㅈ"
              "오랜만에 술마시러 왔는데 안주 미쳤다;;"
              "시험 끝, 재수강 각."
        """;

    public String autoGenerateDiary(AutoGenerateRequest request) {
        String userPrompt = String.join(", ", request.getTags());
        return openAiClient.ask(SYSTEM_ROLE_AUTO_GENERATE, userPrompt);
    }

    public String summarizeDiary(SummaryRequest request) {
        String userPrompt = "일기 내용:\n" + request.getContent();
        return openAiClient.ask(SYSTEM_ROLE_SUMMARY, userPrompt);
    }

    public LanguageStyleResponse extractLanguageStyle(LanguageStyleRequest request) throws JsonProcessingException {
        String userPrompt = "\"" + request.getEmotion()
                + "\"(이)라는 감정에서 크게 벗어나지 않도록 다음 일기에 어울리는 언어 스타일을 3가지 뽑아줘. 일기 내용:\n"
                + request.getContent();

        String response = openAiClient.ask(SYSTEM_ROLE_LANGUAGE_STYLE, userPrompt);

        ObjectMapper mapper = new ObjectMapper();
        return mapper.readValue(response, LanguageStyleResponse.class);
    }

    public String getStyledSummary(StyledSummaryRequest request) {
        String userPrompt = request.getSummary();

        if ("인터넷밈".equals(request.getStyle())) {
            return openAiClient.ask(SYSTEM_ROLE_INTERNET_MEME, userPrompt);
        } else if ("다이어리".equals(request.getStyle())) {
            return openAiClient.ask(SYSTEM_ROLE_DIARY, userPrompt);
        }
        return openAiClient.ask(SYSTEM_ROLE_STYLED_SUMMARY,
                "\"" + request.getStyle() + "\"이라는 언어 스타일을 적용해서 다음의 일기 요약을 다시 써줘: \n" + userPrompt);
    }

}

